<?php declare(strict_types=1);

/**
 * @file keeps Drupal installation and update hooks implementations.
 */

use Xtuple\Xdruple\Application\Component\Component\System\Install\InstallComponent;

/**
 * Implements hook_schema().
 *
 * @return array
 */
function xdruple_schema() {
  if ($component = _xdruple_application_install_component()) {
    return $component->schema();
  }
  return [];
}

/**
 * Implements hook_schema_alter().
 *
 * @param array $schema
 */
function xdruple_schema_alter(&$schema) {
  if ($component = _xdruple_application_install_component()) {
    $component->schemaAlter($schema);
  }
}

/**
 * Implements hook_install().
 */
function xdruple_install() {
  if ($component = _xdruple_application_install_component()) {
    $component->install();
  }
}

/**
 * Implements hook_enable().
 */
function xdruple_enable() {
  if ($component = _xdruple_application_install_component()) {
    $component->enable();
  }
}

/**
 * Implements hook_update_last_removed().
 *
 * @return int
 */
function xdruple_update_last_removed() {
  if ($component = _xdruple_application_install_component()) {
    return $component->updateLastRemoved();
  }
  return 7000;
}

/**
 * Implements hook_update_dependencies().
 *
 * @return array
 */
function xdruple_update_dependencies() {
  if ($component = _xdruple_application_install_component()) {
    return $component->updateDependencies();
  }
  return [];
}

/**
 * Implements hook_disable().
 */
function xdruple_disable() {
  if ($component = _xdruple_application_install_component()) {
    $component->disable();
  }
}

/**
 * Implements hook_uninstall().
 */
function xdruple_uninstall() {
  if ($component = _xdruple_application_install_component()) {
    $component->uninstall();
  }
}

function _xdruple_application_install_component(): ?InstallComponent {
  /** @var InstallComponent|null $component */
  $component = xdruple_application()->component(InstallComponent::NAME);
  return $component;
}
